{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","sortBy","field","reorderedGoods","goods","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","Error","reverse","getReorderedGoods","className","type","classNames","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,uBAAAA,I,mBAAAA,I,gBAAAA,M,KAoCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAmBH,EAASM,MAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KAMMC,EAAS,SAACC,GACdF,EAAYE,IAQRC,EA/CD,SACLC,EACAL,EACAH,GAEA,IAAMS,EAAY,YAAOD,GAsBzB,OApBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQT,GACN,KAAKP,EAASiB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKhB,EAASmB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,KAAKpB,EAASM,KACZ,OAAO,EAET,QACE,MAAM,IAAIe,MAAM,uBAIlBjB,GACFS,EAAaS,UAGRT,EAoBgBU,CACrBtB,EACAM,EACAH,GAGF,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpB,CACE,WAAYnB,IAAaP,EAASiB,WAEtCU,QAAS,kBAAMlB,EAAOT,EAASiB,WANjC,iCAWA,wBACEQ,KAAK,SACLD,UAAWE,IAAW,oBACpB,CACE,WAAYnB,IAAaP,EAASmB,SAEtCQ,QAAS,kBAAMlB,EAAOT,EAASmB,SANjC,4BAWA,wBACEM,KAAK,SACLD,UAAWE,IAAW,oBACpB,CACE,YAAatB,IAEjBuB,QAlDQ,WACdtB,GAAc,SAAAuB,GAAO,OAAKA,MA2CtB,sBAWErB,IAAaP,EAASM,OAAuB,IAAfF,IAC9B,wBACEqB,KAAK,SACLD,UAAU,4BACVG,QAnDI,WACZnB,EAAYR,EAASM,MACrBD,GAAc,IA8CR,sBAUJ,6BACE,6BACGM,EAAekB,KAAI,SAAAC,GAAI,OACtB,oBACE,UAAQ,OADV,SAIGA,GAFIA,cC9HnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bffb5b9b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  ALPHABET,\n  LENGTH,\n  NONE,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      case SortType.NONE:\n        return 0;\n\n      default:\n        throw new Error('Wrong sort type');\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState<SortType>(SortType.NONE);\n\n  const reverse = () => {\n    setIsReversed(current => !current);\n  };\n\n  const sortBy = (field: SortType) => {\n    setSortType(field);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n          onClick={() => sortBy(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n          onClick={() => sortBy(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning',\n            {\n              'is-light': !isReversed,\n            })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed === true) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {reorderedGoods.map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}